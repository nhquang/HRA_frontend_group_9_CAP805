{"remainingRequest":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\src\\components\\auth\\forgot_password.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\src\\components\\auth\\forgot_password.vue","mtime":1628681377420},{"path":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Akash\\Desktop\\College\\2nd Semester\\CAP 805 Capstone Project\\HRA_frontend_group_9_CAP805\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9jc3MvYXV0aC5jc3MiOwo="},{"version":3,"sources":["forgot_password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA","file":"forgot_password.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n  <div class=\"h-100\">\n    <section class=\"h-100 d-flex auth-block\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 auth-logo-block\">\n            <img src=\"@/assets/images/hrm-logo.png\" />\n          </div>\n          <div class=\"col-12\">\n            <label>Username</label>\n            <input type=\"text\" id=\"username\" v-model=\"username\"/>\n          </div>\n          <div class=\"col-12\">\n            <label>Password</label>\n            <input type=\"password\" id=\"password\" v-model=\"password\"/>\n          </div>\n          <div class=\"col-12\">\n            <label>Confirm Password</label>\n            <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\"/>\n          </div>\n          <div class=\"col-12\">\n            <button class=\"full-button\" @click=\"register()\">UPDATE</button>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n<script>\nimport { formValidation } from '@/helper/form_validation';\nimport axios from 'axios';\nexport default {\n  mixins: [formValidation],\n  data() {\n    return {\n      username: '', password: '', confirmPassword: '', activationCode: ''\n    }\n  },\n  validators: {\n    username(value) { \n      return this.validator.value(value).required(this.required('username')); \n    },\n    password(value) {\n      return this.validator.value(value).required(this.required('Password')); \n    },\n    'confirmPassword, password'(confirm_password, password) { \n      return this.validator.value(confirm_password).required(this.required('Confirm Password')).match(password, this.match('Password'));\n    },\n  },   \n  methods: {\n    async register() {\n      this.resetFormError();\n      this.$validate();\n      if(this.validation.errors.length == 0) {\n        try {\n          this.$store.state.loading = true;\n          var data = {\n            username: this.username,\n            password: this.password,\n            confirmPassword: this.confirmPassword,\n          }\n          var response = await axios.post(this.$store.state.apiUrl+'/register', data);\n          if(response.hasOwnProperty('message')) {\n            console.log(response);\n          }\n          this.$store.state.loading = false;\n        }\n        catch(error) {\n          this.$errorHandling(error);\n        }\n      }\n      else {\n        this.tooltipError();\n      }\n    }\n  }\n}\n</script>\n<style>\n@import \"../../assets/css/auth.css\";\n</style>"]}]}